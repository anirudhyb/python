Practice Exercises for Logic and Conditionals

Solve each of the practice exercises below. Each problem includes three CodeSkulptor links: one for a template that you should use as a starting point for your solution, one to our solution to the exercise, and one to a tool that automatically checks your solution.

Write a Python function 𝚒𝚜_𝚎𝚟𝚎𝚗 that takes as input the parameter 𝚗𝚞𝚖𝚋𝚎𝚛 (an integer) and returns 𝚃𝚛𝚞𝚎 if 𝚗𝚞𝚖𝚋𝚎𝚛 is even and 𝙵𝚊𝚕𝚜𝚎 if 𝚗𝚞𝚖𝚋𝚎𝚛 is odd. Hint: Apply the remainder operator to 𝚗 (i.e., 𝚗𝚞𝚖𝚋𝚎𝚛 % 𝟸) and compare to zero. Even template --- Even solution --- Even (Checker)
Write a Python function 𝚒𝚜_𝚌𝚘𝚘𝚕 that takes as input the string 𝚗𝚊𝚖𝚎 and returns 𝚃𝚛𝚞𝚎 if 𝚗𝚊𝚖𝚎 is either "𝙹𝚘𝚎", "𝙹𝚘𝚑𝚗" or "𝚂𝚝𝚎𝚙𝚑𝚎𝚗" and returns 𝙵𝚊𝚕𝚜𝚎 otherwise. (Let's see if Scott manages to catch this. ☺ ) Cool template --- Cool solution --- Cool (Checker)
Write a Python function 𝚒𝚜_𝚕𝚞𝚗𝚌𝚑𝚝𝚒𝚖𝚎 that takes as input the parameters 𝚑𝚘𝚞𝚛 (an integer in the range [1,12]) and 𝚒𝚜_𝚊𝚖 (a Boolean “flag” that represents whether the hour is before noon). The function should return 𝚃𝚛𝚞𝚎 when the input corresponds to 11am or 12pm (noon) and 𝙵𝚊𝚕𝚜𝚎 otherwise. If the problem specification is unclear, look at the test cases in the provided template. Our solution does not use conditional statements. Lunchtime template --- Lunchtime solution --- Lunchtime (Checker)
Write a Python function 𝚒𝚜_𝚕𝚎𝚊𝚙_𝚢𝚎𝚊𝚛 that take as input the parameter 𝚢𝚎𝚊𝚛 and returns 𝚃𝚛𝚞𝚎 if 𝚢𝚎𝚊𝚛 (an integer) is a leap year according to the Gregorian calendar and 𝙵𝚊𝚕𝚜𝚎 otherwise. The Wikipedia entry for leap yearscontains a simple algorithmic rule for determining whether a year is a leap year. Your main task will be to translate this rule into Python. Leap year template --- Leap year solution --- Leap year (Checker)
Write a Python function 𝚒𝚗𝚝𝚎𝚛𝚟𝚊𝚕_𝚒𝚗𝚝𝚎𝚛𝚜𝚎𝚌𝚝 that takes parameters 𝚊, 𝚋, 𝚌, and 𝚍 and returns 𝚃𝚛𝚞𝚎 if the intervals [a,b] and [c,d] intersect and 𝙵𝚊𝚕𝚜𝚎 otherwise. While this test may seem tricky, the solution is actually very simple and consists of one line of Python code. (You may assume that a≤b and c≤d.) Interval intersect template --- Interval intersect solution --- Interval intersect (Checker)
Write a Python function 𝚗𝚊𝚖𝚎_𝚊𝚗𝚍_𝚊𝚐𝚎 that take as input the parameters 𝚗𝚊𝚖𝚎 (a string) and 𝚊𝚐𝚎 (a number) and returns a string of the form "% 𝚒𝚜 % 𝚢𝚎𝚊𝚛𝚜 𝚘𝚕𝚍." where the percents are the string forms of 𝚗𝚊𝚖𝚎 and 𝚊𝚐𝚎. The function should include an error check for the case when 𝚊𝚐𝚎 is less than zero. In this case, the function should return the string "𝙴𝚛𝚛𝚘𝚛: 𝙸𝚗𝚟𝚊𝚕𝚒𝚍 𝚊𝚐𝚎". Name and age template --- Name and age solution --- Name and age (Checker)
Write a Python function 𝚙𝚛𝚒𝚗𝚝_𝚍𝚒𝚐𝚒𝚝𝚜 that takes an integer 𝚗𝚞𝚖𝚋𝚎𝚛 in the range [0,100) and prints the message "𝚃𝚑𝚎 𝚝𝚎𝚗𝚜 𝚍𝚒𝚐𝚒𝚝 𝚒𝚜 %, 𝚊𝚗𝚍 𝚝𝚑𝚎 𝚘𝚗𝚎𝚜 𝚍𝚒𝚐𝚒𝚝 𝚒𝚜 %." where the percents should be replaced with the appropriate values. The function should include an error check for the case when 𝚗𝚞𝚖𝚋𝚎𝚛 is negative or greater than or equal to 100. In those cases, the function should instead print "𝙴𝚛𝚛𝚘𝚛: 𝙸𝚗𝚙𝚞𝚝 𝚒𝚜 𝚗𝚘𝚝 𝚊 𝚝𝚠𝚘-𝚍𝚒𝚐𝚒𝚝 𝚗𝚞𝚖𝚋𝚎𝚛.". Print digits template --- Print digits solution --- Print digits (Checker)
Write a Python function 𝚗𝚊𝚖𝚎_𝚕𝚘𝚘𝚔𝚞𝚙 that takes a string 𝚏𝚒𝚛𝚜𝚝_𝚗𝚊𝚖𝚎 that corresponds to one of ("𝙹𝚘𝚎", "𝚂𝚌𝚘𝚝𝚝", "𝙹𝚘𝚑𝚗" or "𝚂𝚝𝚎𝚙𝚑𝚎𝚗") and then returns their corresponding last name ("𝚆𝚊𝚛𝚛𝚎𝚗", "𝚁𝚒𝚡𝚗𝚎𝚛", "𝙶𝚛𝚎𝚒𝚗𝚎𝚛" or "𝚆𝚘𝚗𝚐"). If 𝚏𝚒𝚛𝚜𝚝_𝚗𝚊𝚖𝚎 doesn't match any of those strings, return the string "𝙴𝚛𝚛𝚘𝚛: 𝙽𝚘𝚝 𝚊𝚗 𝚒𝚗𝚜𝚝𝚛𝚞𝚌𝚝𝚘𝚛". Name lookup template --- Name lookup solution --- Name lookup (Checker)
Pig Latin is a language game that involves altering words via a simple set of rules. Write a Python function 𝚙𝚒𝚐_𝚕𝚊𝚝𝚒𝚗 that takes a string 𝚠𝚘𝚛𝚍 and applies the following rules to generate a new word in Pig Latin. If the first letter in 𝚠𝚘𝚛𝚍 is a consonant, append the consonant plus "𝚊𝚢" to the end of the remainder of the word. For example, 𝚙𝚒𝚐_𝚕𝚊𝚝𝚒𝚗("𝚙𝚒𝚐") would return "𝚒𝚐𝚙𝚊𝚢". If the first letter in 𝚠𝚘𝚛𝚍 is a vowel, append "𝚠𝚊𝚢" to the end of the word. For example, 𝚙𝚒𝚐_𝚕𝚊𝚝𝚒𝚗("𝚘𝚠𝚕") returns "𝚘𝚠𝚕𝚠𝚊𝚢". You can assume that 𝚠𝚘𝚛𝚍 is in lower case. The provided template includes code to extract the first letter and the rest of 𝚠𝚘𝚛𝚍 in Python. Note that, in full Pig Latin, the leading consonant cluster is moved to the end of the word. However, we don't know enough Python to implement full Pig Latin just yet. Pig Latin template --- Pig Latin solution --- Pig Latin (Checker)
Challenge: Given numbers a, b, and c, the quadratic equation ax2+bx+c=0 can have zero, one or two real solutions (i.e; values for x that satisfy the equation). The quadratic formulax=−b±b2−4ac√2acan be used to compute these solutions. The expression b2−4ac is the discriminant associated with the equation. If the discriminant is positive, the equation has two solutions. If the discriminant is zero, the equation has one solution. Finally, if the discriminant is negative, the equation has no solutions. Write a Python function 𝚜𝚖𝚊𝚕𝚕𝚎𝚛_𝚛𝚘𝚘𝚝 that takes an input the numbers 𝚊, 𝚋 and 𝚌 and returns the smaller solution to this equation if one exists. If the equation has no real solution, print the message "𝙴𝚛𝚛𝚘𝚛: 𝙽𝚘 𝚛𝚎𝚊𝚕 𝚜𝚘𝚕𝚞𝚝𝚒𝚘𝚗𝚜" and simply return. Note that, in this case, the function will actually return the special Python value 𝙽𝚘𝚗𝚎. Quadratic root template --- Quadratic root solution --- Quadratic root (Checker)

